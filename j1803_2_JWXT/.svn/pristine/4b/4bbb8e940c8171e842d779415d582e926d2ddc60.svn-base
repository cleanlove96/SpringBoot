<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.system.RoleMapper">
	<resultMap id="BaseResultMap" type="com.model.system.Role">
		<id column="role_id" property="roleId" jdbcType="VARCHAR" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		role_id, role_name, role_desc, create_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from role
		where role_id = #{roleId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from role
		where role_id = #{roleId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.model.system.Role">
		insert into role (role_id, role_name, role_desc,
		create_time)
		values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR},
		#{roleDesc,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.model.system.Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="roleDesc != null">
				role_desc,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				#{roleDesc,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.model.system.Role">
		update role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				role_desc = #{roleDesc,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.model.system.Role">
		update role
		set role_name = #{roleName,jdbcType=VARCHAR},
		role_desc = #{roleDesc,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where role_id = #{roleId,jdbcType=VARCHAR}
	</update>

	<select id="findRoleAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role order by create_time desc
	</select>


	<select id="findRoleLByRN" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from role
		where role_name LIKE CONCAT('%',#{roleName,jdbcType=VARCHAR},'%')
	</select>

	<select id="findRoleLByRD" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from role
		where role_desc LIKE CONCAT('%',#{roleDesc,jdbcType=VARCHAR},'%')
	</select>
	<select id="queryAllRole" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
	</select>

</mapper>